/*
 * This file is part of KubeSphere Console.
 * Copyright (C) 2019 The KubeSphere Console Authors.
 *
 * KubeSphere Console is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * KubeSphere Console is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with KubeSphere Console.  If not, see <https://www.gnu.org/licenses/>.
 */

module.exports = {
  abortPipeline: 'abortPipeline',
  'Absolute duration': 'Absolute duration',
  ADD_ACTION: 'Add Action',
  'Add another credential': 'Add another credential',
  'Add conditions': 'Add conditions',
  'Add nesting conditions': 'Add nesting conditions',
  'Add nesting steps': 'Add nesting steps',
  'Add Parallel Stage': 'Add Parallel Stage',
  'Add Step': 'Add Step',
  ALL_BRANCHES: 'All branches',
  CHOICE_PARAM_OPTION_DESC:
    'Enter one option per each line. The first line will be used as the default option.',
  GIT_REPO_DESC: 'Use a repository that contains Jenkinsfiles.',
  archiveArtifacts: 'archiveArtifacts',
  'Are you sure to close this pipeline Editor ?':
    'Are you sure to close this pipeline Editor ?',
  CLOSE_JENKINSFILE_EDITOR_TIP: 'Are you sure to close the Jenkinsfile editor?',
  artifacts: 'artifacts',
  Artifacts: 'Artifacts',
  'Authentication Token': 'Authentication Token',
  'Automatically generated by GitHub': 'Automatically generated by GitHub',
  bcc: 'bcc',
  BEHAVIORAL_STRATEGY: 'Behavioral Strategy',
  blocker: 'blocker',
  BRANCH_SI: 'Branch',
  CODE_REPOSITORY_BRANCH: 'Code Repository Branch',
  Branches: 'Branches',
  BRANCH_COUNT: 'Branch count',
  BRANCH_EXCLUDED: 'Branch Excluded',
  BRANCH_INCLUDED: 'Branch Included',
  'branch success': 'branch success',
  BRANCH_SETTINGS: 'Branch Settings',
  Break: 'Break',
  BUILD_SETTINGS: 'Build Settings',
  BUILD_TRIGGER: 'Build Trigger',
  '@somebody to help review': '@somebody to help review',
  'Send messages by email': 'Send messages by email',
  'Send messages in the build': 'Send messages in the build',
  'Cancelled in review': 'Cancelled in review',
  CC: 'CC',
  'Change Current Directory': 'Change Current Directory',
  'Chinese is not allowed in the pipeline configuration':
    'Chinese is not allowed in the pipeline configuration',
  'Clean when aborted': 'Clean when aborted',
  'Clean Workspace': 'Clean Workspace',
  CLONE_DEPTH: 'Clone Depth',
  'Code Quality': 'Code Quality',
  'Code Quality Check': 'Code Quality Check',
  CODE_REPOSITORY: 'Code Repository',
  'Code Vulnerability': 'Code Vulnerability',
  CodeSmells: 'CodeSmells',
  PARAM_DESC: 'Description of the parameter.',
  Commit: 'Commit',
  commit: 'commit',
  'Config File Path': 'Config File Path',
  'config name': 'config name',
  configs: 'configs',
  'Configuration error': 'Configuration error',
  container: 'container',
  Continue: 'Continue',
  Coverage: 'Coverage',
  CREATE_A_CREDENTIAL: 'Create a Credential',
  CREATE_CREDENTIAL: 'Create Credential',
  CREATE_PIPELINE: 'Create Pipeline',
  CREDENTIAL_SI: 'Credential',
  'credential Id': 'credential Id',
  'Credential Id': 'Credential Id',
  CREDENTIAL_ID: 'Credential ID',
  CREDENTIAL_PL: 'Credentials',
  CREDENTIAL: 'Credential',
  CREDENTIAL_LOW: 'credential',
  CREDENTIALS_MANAGEMENT: 'Credential Management',
  credentialsId: 'credentialsId',
  critical: 'critical',
  'Current branch name must match the input value':
    'Current branch name must match the input value',
  DAYS_TO_KEEP_BUILDS: 'Days to Keep Builds',
  DAYS_TO_KEEP_BRANCHES: 'Days to Keep Branches',
  'defaultValue -1 means not to discard':
    'defaultValue -1 means not to discard',
  'Delete all resources of the deployment file':
    'Delete all resources of the deployment file',
  'Deploy resources to the Kubernetes cluster':
    'Deploy resources to the Kubernetes cluster',
  "Didn't pass": "Didn't pass",
  dir: 'dir',
  Discard: 'Discard',
  DISCARD_OLD_BRANCHES: 'Discard old branches',
  DISCARD_OLD_BUILDS: 'Discard old builds',
  'Discover Tag Branches': 'Discover Tag Branches',
  'Discover Branches': 'Discover Branches',
  'Discover branches from repository': 'Discover branches from repository',
  'Discover PR from Forks': 'Discover PR from Forks',
  'Discover PR from Origin': 'Discover PR from Origin',
  'Discover pull requests from forks': 'Discover pull requests from forks',
  'Discover pull requests from origin': 'Discover pull requests from origin',
  'Display All': 'Display All',
  ENABLE_TAG_BRANCH_DISCOVERY: 'Enable discovery of tag branches',
  DISABLE_TAG_BRANCH_DISCOVERY: 'Disable discovery of tag branches',
  'Docker Container Registry Credentials':
    'Docker Container Registry Credentials',
  'Docker Registry URL': 'Docker Registry URL',
  dockerCredentials: 'dockerCredentials',
  DOWNLOAD_LOGS: 'Download Logs',
  'Drag and drop tasks to sort': 'Drag and drop tasks to sort',
  Duration: 'Duration',
  echo: 'echo',
  'Edit Config': 'Edit Config',
  'Edit Credential': 'Edit Credential',
  'Edit Jenkinsfile': 'Edit Jenkinsfile',
  EDIT_PIPELINE: 'Edit Pipeline',
  'Enable Variable Substitution in Config':
    'Enable Variable Substitution in Config',
  enableConfigSubstitution: 'enableConfigSubstitution',
  'Enter an expression': 'Enter an expression',
  'Environment name': 'Environment name',
  EXCLUDE_PR_BRANCHES: 'Exclude branches that are also filed as PRs',
  'Executes the code inside the block with a determined time out limit.':
    'Executes the code inside the block with a determined time out limit.',
  expression: 'expression',
  Failure: 'Failure',
  'For accessing GitHub': 'For accessing GitHub',
  USERS_WITH_PERMISSION: 'Users with Admin or Write permission',
  'get token': 'get token',
  GIT_CLONE_OPTIONS: 'Git Clone Options',
  SCAN_REGULARLY: 'Scan regularly if not otherwise triggered',
  NO_CONCURRENT_BUILD_DESC:
    'If this option is selected, you cannot run multiple builds concurrently.',
  info: 'info',
  input: 'input',
  'Inspection results do not affect subsequent tasks':
    'Inspection results do not affect subsequent tasks',
  'instance failed to match at least one schema':
    'instance failed to match at least one schema',
  'Internal nested conditions only need to satisfy one':
    'Internal nested conditions only need to satisfy one',
  'Internal nesting conditions must be matched':
    'Internal nesting conditions must be matched',
  Issues: 'Issues',
  PIPELINE_PARAM_DEFAULT_DESC:
    'The default value of the field. You can also change the default value before manually running a pipeline.',
  'Jenkinsfile syntax error, message': 'Jenkinsfile syntax error, message',
  'key File Variable': 'key File Variable',
  keyFileVariable: 'keyFileVariable',
  'Kubeconfig Variable': 'Kubeconfig Variable',
  'Kubernetes Namespace for Secret': 'Kubernetes Namespace for Secret',
  'Kubernetes Secrets': 'Kubernetes Secrets',
  LAST_MESSAGE: 'Last Message',
  LAST_MESSAGE_SCAP: 'Last message',
  Line: 'Line',
  'Line number': 'Line number',
  'Lines of Code': 'Lines of Code',
  'Load credentials into environment variables':
    'Load credentials into environment variables',
  'Load the sonarqube configuration provided by Jenkins into the Pipeline.':
    'Load the sonarqube configuration provided by Jenkins into the Pipeline.',
  mail: 'mail',
  major: 'major',
  MAXIMUM_NUMBER_OF_BRANCHES_TO_KEEP: 'Maximum Number of Branches to Keep',
  MAXIMUM_NUMBER_OF_BUILDS_TO_KEEP: 'Maximum Number of Builds to Keep',
  minor: 'minor',
  "Missing one or more required properties: 'name'":
    "Missing one or more required properties: 'name'",
  'Negative prefix': 'Negative prefix',
  'No artifacts records': 'No artifacts records',
  'No branches found': 'No branches found',
  'No commit records': 'No commit records',
  NO_CONCURRENT_BUILDS: 'No concurrent builds',
  'No need': 'No need',
  NO_STATUS: 'No status',
  Normal: 'Normal',
  'Not Build': 'Not Build',
  'Not fail build': 'Not fail build',
  'not run': 'not run',
  'not support edit nested stage': 'not support edit nested stage',
  DAYS_TO_KEEP_BUILDS_DESC:
    'Old builds are discarded after this number of days. The default value is 7.',
  MAXIMUM_NUMBER_OF_BUILDS_TO_KEEP_DESC:
    'Old builds are discarded when the build number exceeds the maximum number. The default value is 10.',
  ONLY_PR_BRANCHES: 'Only branches that are also filed as PRs',
  PARAMETERIZED_BUILD: 'Parameterized Build',
  ENTER_PARAMETERS: 'Enter Parameters',
  PASSPHRASE: 'Passphrase',
  'passphrase Variable': 'passphrase Variable',
  passphraseVariable: 'passphraseVariable',
  'Password Variable': 'Password Variable',
  passwordVariable: 'passwordVariable',
  PIPELINE: 'Pipeline',
  PIPELINE_PL: 'Pipelines',
  PIPELINE_LOW: 'pipeline',
  PIPELINE_CLONE_TIMEOUT: 'Pipeline Clone Timeout (Minutes)',
  'Pipeline config file not found': 'Pipeline config file not found',
  'Pipeline Configuration': 'Pipeline Configuration',
  PIPELINE_EVENT_TRIGGER: 'Pipeline event trigger',
  'Pipeline initialization': 'Pipeline initialization',
  'Pipeline List': 'Pipeline List',
  'Pipeline Run Logs': 'Pipeline Run Logs',
  'pipeline syntax error': 'pipeline syntax error',
  'Please add at least one step.': 'Please add at least one step.',
  'Please input images name': 'Please input images name',
  PIPELINE_NAME_TIP: 'Please enter a pipeline name.',
  'Please input the credential name.': 'Please input the credential name.',
  SELECT_CODE_REPO_DESC:
    'Please select a code repository as the code source for the pipeline.',
  'Press enter for the next': 'Press enter for the next',
  'Print message': 'Print message',
  PRIVATE_KEY: 'Private Key',
  Proceed: 'Proceed',
  'Pull code by Git': 'Pull code by Git',
  'Pull code by SVN': 'Pull code by SVN',
  PULL_STRATEGY: 'Pull Strategy',
  WEBHOOK_PUSH_URL: 'Webhook Push URL',
  Queue: 'Queue',
  Queued: 'Queued',
  Recipient: 'Recipient',
  REGEX_FILTER: 'RegEx Filter',
  'Registry Credentials': 'Registry Credentials',
  remote: 'remote',
  REMOTE_REPOSITORY_URL: 'Remote Repository URL',
  REPOSITORY_URL: 'Repository URL',
  REPOSITORY_NAME: 'Repository Name',
  RESCAN: 'Rescan',
  RUN: 'Run',
  'Run Pipeline': 'Run Pipeline',
  'Save Artifact': 'Save Artifact',
  SCAN_INTERVAL: 'Scan Interval',
  LOGS_SCANNED_SUCCESSFULLY: 'Logs scanned successfully.',
  'Repo Scanned Successfully': 'Repo Scanned Successfully',
  REPO_SCAN_TRIGGER: 'Repository Scan Trigger',
  'Scan Repository Logs': 'Scan Repository Logs',
  'Scan Repository': 'Scan Repository',
  SCHEDULED_BUILD: 'Scheduled build',
  SCM: 'SCM',
  SCRIPT_PATH: 'Script Path',
  WEBHOOK_PUSH: 'Webhook Push',
  secretName: 'secretName',
  secretNamespace: 'secretNamespace',
  SELECT_A_PIPELINE: 'Select a pipeline.',
  SELECT_CODE_REPOSITORY: 'Select Code Repository',
  SELECT_THIS_REPOSITORY: 'Select This Repository',
  Sender: 'Sender',
  sh: 'sh',
  'Shell commands can be executed in the container':
    'Shell commands can be executed in the container',
  'Show Advanced Settings': 'Show Advanced Settings',
  'Show Logs': 'Show Logs',
  'Show only the last 10': 'Show only the last 10',
  'show yaml editor': 'show yaml editor',
  SINGLE_SVN: 'Single SVN',
  SVN: 'SVN',
  Skipped: 'Skipped',
  'sonar is the default config name.': 'sonar is the default config name.',
  "Sorry, you don't have the permission to do this.":
    "Sorry, you don't have the permission to do this.",
  'Specify a container to add nested tasks to execute inside the container':
    'Specify a container to add nested tasks to execute inside the container',
  SCRIPT_PATH_DESC:
    'Specify the location of the Jenkinsfile in the source code repository.',
  'Start the follow-up task after the inspection':
    'Start the follow-up task after the inspection',
  'Started By': 'Started By',
  'Stop Job Successfully, Status updated later':
    'Stop Job Successfully, Status updated later',
  SUB_HEALTHY: 'Sub-healthy',
  Subject: 'Subject',
  submitter: 'submitter',
  submitterParameter: 'submitterParameter',
  'Task failed, not operational': 'Task failed, not operational',
  TaskStatus: 'TaskStatus',
  'Test Result': 'Test Result',
  'Text Variable': 'Text Variable',
  'The conditions required to implement the current phase (optional).':
    'The conditions required to implement the current phase (optional).',
  KUBE_CONTENT_TIP:
    'The default content is the kubeconfig of the current user.',
  'The environment variable entered before running the pipeline is match the current value.':
    'The environment variable entered before running the pipeline is match the current value.',
  'The label on which to run the Pipeline or individual stage':
    'The label on which to run the Pipeline or individual stage',
  PIPELINE_NAME_DESC:
    'The name of the pipeline. Pipelines in the same project must have different names.',
  'This name has been used.': 'This name has been used.',
  'Time Used': 'Time Used',
  Timeout: 'Timeout',
  TIMEOUT_VALUE: 'Timeout: {value}',
  timeout: 'timeout',
  'Timeout after no activity in logs for this block':
    'Timeout after no activity in logs for this block',
  timer: 'timer',
  TOKEN_PASSWORD: 'Token/Password',
  TRIGGER_REMOTE_BUILD: 'Trigger a remote build (for example, using a script)',
  TRUSTED_USER: 'Trusted User',
  Unnamed: 'Unnamed',
  'url is invalid': 'url is invalid',
  'Use the following URL to remotely triggerworkbench the build':
    'Use the following URL to remotely triggerworkbench the build',
  'User types that can trigger builds': 'User types that can trigger builds',
  'username or group name, multiple values ​​used, separated':
    'username or group name, multiple values ​​used, separated',
  'Username Variable': 'Username Variable',
  usernameVariable: 'usernameVariable',
  'Wait for interactive input': 'Wait for interactive input',
  waitForQualityGate: 'waitForQualityGate',
  HEALTH: 'Health',
  Webhook: 'Webhook',
  WHEN_CREATE_PIPELINE: 'When Create Pipeline',
  WHEN_DELETE_PIPELINE: 'When Delete Pipeline',
  ENABLE_SHALLOW_CLONE: 'Enable shallow clone',
  withCredentials: 'withCredentials',
  withSonarQubeEnv: 'withSonarQubeEnv',
  'Wrong Token': 'Wrong Token',
  'You can execute shell commands or windows batch commands in the build.':
    'You can execute shell commands or windows batch commands in the build.',

  PIPELINE_DESC: `A pipeline is an extensible set of tools that can be combined
    to achieve continuous integration and continuous delivery.
    You can create and manage pipelines on this page.`,
  username_password: 'Account credential',
  login_Plateform: 'Login platform',
  CREDENTIALS_DESC: `Credentials are objects that contain some sensitive data,
    such as username and password, SSH key and Token.
    They are used to provide authentication for pulling code,
    pushing/pulling images, executing SSH scripts, etc. when a pipeline is running.`,
  PARAMETERIZED_BUILD_TIP: `The parameterized build process can
    pass in one or more parameters during a build.
    For example, if you have a pipeline for publishing software and you
    want to upload the release notes too,
    this can be done by adding text parameters here.
    Each parameter has a Name and a Value,
    and the value of Value depends on the parameter type.
    These values can be accessed in the pipeline using params.Name or Name.
    Please note that each parameter defined here should have a unique name.
    When parameterizing a project, the build is replaced by a parameterized build,
    which prompts the user to enter a value for each defined parameter.
    If no value is entered,
    the build proceeds with the default value of each parameter.
    If the project's build is started automatically, for example, by a timed trigger,
    it will be triggered with the default value of each parameter. `,
  AUTHENTICATION_TOKEN_TIP: `Enable this option if you need to
    trigger a build by accessing a predefined URL.
    A typical use of this feature is to trigger through the source code
    management system's hook script.
    You need to provide an authorization token in the form of a string so that
    only the person with the authorization token can trigger the remote build.`,
  DISABLE_CONCURRENT_TIP: `This determines when the
    pipeline's build record should be discarded.
    Build records include console output, archive artifacts,
    and other metadata related to a particular build.
    Keeping less builds saves disk space used by Jenkins.
    KubeSphere provides two conditions to determine when the old build should be discarded:
    1. Days to keep builds:
    The builds are discarded after a certain number of days.
    2. Maximum number of builds to keep:
    Only up to this number of builds are kept and the oldest build is discarded.
    These two conditions apply to the build at the same time,
    and if either one is met first, the build is discarded.`,
  DISABLE_CONCURRENT_SCM_TIP: `This determines when the branches should be discarded and all build records under the branch.
    The build record includes the console output,
    archived artifacts, and other metadata related to a particular build.
    Keeping less builds saves disk space used by Jenkins.
    KubeSphere provides two options to determine when the old branches should be discarded:
    1. Days to keep branches:
    The branches are discarded after a certain number of days.
    2. Maximum number of branches to keep:
    Only up to this number of branches are kept and the oldest branch is discarded.
    These two conditions apply to the branch at the same time.
    If any of the conditions is met first, the branch is discarded.`,
  SCHEDULED_BUILD_TIP:
    'It provides cron-like functionality to run this pipeline regularly.',
  DAYS_TO_KEEP_BRANCHES_DESC:
    'Old branches are discarded after this number of days. The default value is 7.',
  MAXIMUM_NUMBER_OF_BRANCHES_TO_KEEP_DESC:
    'Old branches are discarded when the branch number exceeds the maximum number. The default value is 5.',
  CRON_TIP: `This field follows the cron syntax (slightly different).
    Specifically, each line contains 5 fields separated by tabs or spaces.
    minutes: the first few minutes of an hour (0-59)
    hours: the first few hours of the day (0-23)
    the days of the month: the first few days of a month (1-31 )
    Month: The first few days of the first few days (0-12), the first few days of the week (0-12),
    0 and 7 are Sundays. `,

  PIPELINES_BASEINFO_DESC:
    'Please enter the basic information of the pipeline.',
  PIPELINE_ADVANCE_SETTINGS_DESC:
    'Configure a complex behavior policy for the pipeline (Optional).',
  CREDENTIALS_CREATE_DESC: 'Create credentials for DevOps projects',
  CHECKOUT_DESC: 'Pull code; often used to pull non-git code, such as svn.',
  PRIVATE_IMAGE_DESC: `To deploy from a private image repository,
    you need to create a mirrored repository and then pull the image. `,
  AGENT_TYPE_DESC: `The agent section specifies
    where the entire Pipeline or a particular stage will be executed in the Jenkins environment,
    depending on where the Agent part is placed.
    This part must be defined at the top level within the pipeline block,
    but the stage level usage is optional. `,
  AUTHENTICATION_TOKEN_DESC: `Use the following URL to remotely trigger the build:
    JENKINS_URL / job / JOB_NAME / build? Token =TOKEN_NAME or /buildWithParameters?
    Token = TOKEN_NAME You can choose to append &cause=reason to provide the text that
    will be included in the build reason for the record. `,
  ACTIVITY_EMPTY_TIP: 'The current pipeline is not running yet',

  PIPELINE_NO_CONFIG:
    'The relevant configuration file was not found in the current pipeline',
  NOT_VALID_JENKINS_FILE: `The current Jenkinsfile is not a standard declarative Jenkinsfile
    and cannot be graphically displayed`,
  PIPELINE_CRONJOB_CRON_DESC: `For syntax reference, refer to
    <a href="//jenkins.io/doc/book/pipeline/syntax/#cron-syntax" target="_blank">CRON</a>.`,
  WEBHOOK_PUSH_DESC:
    'Push a message to this URL to trigger a reindexing of the repository. ',
  WEBHOOK_DESC: 'Configure webhook notifications by setting a webhook server.',
  TIME_TRIGGER_DESC: `Some types of items will automatically re-index
    when they receive an external push message.
    However, in some cases, message notifications may fail.
    This option will check if the index has been executed within the specified time interval,
    and if not, trigger the index. `,

  KUBERNETES_DEPLOY_DESC: `Deploy resources on a Kubernetes cluster.
    In a continuous integration or continuous deployment environment,
    only those resources that need to be updated regularly should be placed in the deployment step.
    Therefore, this step is mostly used to process the deployment of such resources.`,
  KUBERNETES_DEPLOY_DESC_MORE: `<br />
  <label>This step has the following main features:</label>
  <li>Distribution without kubectl</li>
  <li>Variable substitution in Jenkinsfile, Dynamic deployment is possible. </li>
  <li>Support for pulling docker images from private image repositories</li>
  <label> Currently this step supports the following resources:</label>
  <br />
  <li>Configuration </li>
  <li>Key</li>
  <li>Deploy</li>
  <li>Dave Process Set</li>
  <li>App Routing</li>
  <li>Namespace</li>
  <li>Task</li>
  <li>Service</li>
  <li>Replica Set</li>
  <li>
  Replication
  Controller (rolling updates are not supported, and use Deployment if you want to use rolling updates)
  </li>`,

  OPTIONS_PR_PARAMS_1: 'Source code version of PR merged with target branch',
  OPTIONS_PR_PARAMS_2: 'Source code version of PR itself',
  OPTIONS_PR_PARAMS_3: `Two pipelines are created when PR is discovered.
    One pipeline uses the source code version of PR itself,
    and the other pipeline uses version of the source code merged with the target branch using PR.`,

  ADD_NEW_CREDENTIAL_DESC:
    'Obtaining repository code may require a credential. Please select an existing credential or add a new one.',
  PIPELINE_PREPAIR_DESC:
    'The environment is being prepared. There will be a graphical display later.',
  PARAMS_DESC: `The following parameters are generated based on the pipeline settings or
     the parameters section of the Jenkinsfile, which are entered according to operational requirements.`,
  EDIT_CREDENTIAL_DESC:
    'The following form will not display the original credential information. The original information will be overwritten by any new input.',
  pipeline_conditions: 'Conditions',
  PARAMS_STRING: 'String',
  PARAMS_TEXT: 'Text',
  PARAMS_BOOLEAN: 'Boolean',
  PARAMS_CHOICE: 'Choice',
  PARAMS_PASSWORD: 'Password',
  CODE_SMELL: 'Code Smell',
  BUG: 'Bug',
  VULNERABILITY: 'Vulnerability',
  SECURITY_HOTSPOT: 'Security Hotspot',
  REG_FILTER_TITLE: 'Filter by name (with regular expression)',
  REG_FILTER_DESC:
    'Enable regular expressions, ignoring names that do not match the provided regular expression (including branches and PRs)',
  waitForQualityGate_desc:
    "Code quality check standards are derived from SonarQube's Quality Gate. If you need to customize the standards, go to SonarQube settings.",
  PIPELINE_CREATE_DESC:
    "Pipeline's task execution will begin after the initialization is complete.",
  REVIEW_DESC:
    'When the pipeline runs here, this task will be suspended, and you can choose to continue or terminate after the review.',
  INPUT_DESC:
    'When the pipeline runs here, the task will be suspended, and the creator and @somebody can choose to continue or terminate the pipeline.',
  INPUT_MESSAGE_DESC:
    'This message will be displayed in the pipeline running state.',

  withSonarQubeEnv_DESC:
    'Quickly locate potential or obvious errors in your code',
  waitForQualityGate_DESC: 'Executed after performing code analysis',
  script_DESC: 'Execute groovy script',
  PIPELINE_QUEUED_TITLE: 'Pipeline will be initialized soon',
  PIPELINE_QUEUED_DESC:
    'You need to wait for the agent to start and execute the pipeline (note that if the agent has not started for a long time, please check the agent configuration and cluster resources).',
  pipeline_owner:
    'The owner of the DevOps project, with the highest authorization of the project, can perform all operations',
  pipeline_maintainer:
    'The maintainer of the DevOps project can perform credentials and pipeline configuration in the DevOps project',
  pipeline_developer:
    'The developer of the DevOps project can trigger and view the pipeline',
  pipeline_reporter:
    'The Observer of the DevOps project can only view the resources of the project',
  LoadPrevData_Desc:
    'It was detected that this pipeline was not successfully edited last time. Is the last data loaded to continue editing?',
  PATTERN_PIPELINE_NAME_VALID_NAME_TIP:
    "Invalid name (Support uppercase and lowercase letters, numbers, '_' and '-')",
  WRONG_GITHUB_TOKEN_DESC: `Wrong Token
  <a
    class="float-right"
    href="https://github.com/settings/tokens/new?scopes=repo,read:user,user:email,write:repo_hook"
    target="_blank"
  >
    Get Token
  </a>`,
  GET_GITHUB_TOKEN_DESC: `For accessing GitHub
  <a
    class="float-right"
    href="https://github.com/settings/tokens/new?scopes=repo,read:user,user:email,write:repo_hook"
    target="_blank"
  >
    Get Token
  </a>`,

  bitbucket_server_ACCESSTOKEN_PLACEHOLDER:
    'Please enter your Bitbucket account information.',
  github_ACCESSTOKEN_PLACEHOLDER: 'Please enter your GitHub access token.',
  PIPELINES_FOOTER_SEE_MORE: 'Go to the branch details page to see more.',
  CRON_DESC: 'Last run at {lastTime}; next run at {nextTime}.',
  JENKINS_LINS_ERROR: 'has syntax error at line {line}.',
  WHEN_DELETE_PIPELINE_DESC:
    'When a pipeline is deleted, the tasks in the specified pipeline are automatically triggered.',
  WHEN_CREATE_PIPELINE_DESC:
    'When a new pipeline is created, the tasks in the specified pipeline are automatically triggered.',
  'Started By {name}': 'Started By {name}',
  CREDENTIAL_ID_TIP: 'The credential ID already exists.',
  'Invalid credential ID': 'Invalid credential ID',
  CI: 'Continuous Integration (CI)',
  CI_DESC:
    'Continuous integration (CI) is the process of automatically detecting, pulling, building, and (in most cases) unit testing after source code changes.',
  CICD: 'Continuous Integration & Delivery (CI/CD)',
  CICD_DESC:
    "Continuous deployment (CD) refers to the idea of automatically providing the release version in the continuous delivery pipeline to end users. According to the user's installation method, automatic deployment in the cloud environment, app upgrades (such as apps on mobile phones), website updates, or only the list of available versions.",
  CUSTOM_PIPELIEN: 'Custom Pipeline',
  CUSTOM_PIPELIEN_DESC:
    'You can select the tasks you need to customize the contents of the pipeline.',
  COPY_PIPELINE: 'Copy Pipeline',
  'Batch Run Start': 'Batch Run Start',
  'Batch Run Success': 'Batch Run Completed',
  'Batch Run Fail': 'Batch Run Failed',
  'Run Start': 'Start Running',
  GITLAB_SERVER: 'GitLab Server',
  GITLAB_PROJECT_OWNER: 'GitLab Project Owner',
  CREATE_PIPELINE_DESC: 'Build, test and deploy with Pipelines',
  'Choose a Pipeline Template': 'Choose a Pipeline Template',
  BATCH_RUN_DESC: 'Multi-branch pipelines cannot run in a batch.',
  'Sync Status': 'Sync Status',

  // Pipeline List Page
  PULL_REQUEST_PL: 'Pull Requests',
  HEALTHY: 'Healthy',

  // Pipeline Creation Page
  DEVOPS_PROJECT_DESC:
    'DevOps projects are used to group resources and control the resource management permissions of different users.',
  CODE_REPOSITORY_OPTIONAL: 'Code Repository (Optional)',
  TOKEN: 'Token',
  OPTIONS: 'Options',
}
